[tox]
envlist =
    py311
    lint
    mypy
    pytest
    shellcheck

[testenv]
skip_install=true
recreate=true
deps = -r dnas/requirements.txt

[testenv:lint]
skip_install=true
recreate=true
deps =
    black
    isort
changedir = {toxinidir}
commands =
    black --check --diff -l 79 ./
    isort --check-only --df --profile black -l 79 ./

[testenv:mypy]
skip_install=true
recreate=true
deps =
    {[testenv]deps}
    types-redis
    types-requests
changedir = {toxinidir}
commands = mypy --config-file mypy.ini --exclude venv/ ./

[testenv:pytest]
skip_install=true
recreate=true
deps = {[testenv]deps}
passenv = *
changedir = {toxinidir}
markers =
    sequential_tests
commands =
    # Ensure we have the unallocated ASN data
    python3 ./dnas/scripts/update_asn_allocations.py --debug
    # Run as many test classes in parallel as we have cores.
    # Group all tests from the same class to the same core.
    pytest -vvvv -m "not mrt_stats" -x --numprocesses=logical --dist=loadfile dnas/tests/ {posargs}
    # Run a single test class, this timespliting the tests
    # across multiple cores.
    pytest -vvvv -m "mrt_stats" -x --numprocesses=logical --dist=load dnas/tests/ {posargs}
    # Cleanup test files
    pytest -vvvv dnas/tests/cleanup.py {posargs}

[testenv:shellcheck]
skip_install=true
recreate=false
changedir = {toxinidir}
allowlist_externals = /bin/bash
commands =  /bin/bash -c "/usr/bin/env shellcheck docker/*.sh"

[testenv:fixlint]
skip_install=true
recreate=true
deps =
    black
    isort
changedir = {toxinidir}
commands =
    black -l 79 dnas/
    isort --profile black -l 79 dnas/
